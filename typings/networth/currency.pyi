"""
This type stub file was generated by pyright.
"""

from enum import Enum
from networth.models.base import NWBase

class CurrencyCode(str, Enum):
    """Common currency codes following ISO 4217"""
    USD = ...
    EUR = ...
    GBP = ...
    JPY = ...
    CNY = ...
    INR = ...


CURRENCY_CONFIGS = ...
class Currency(NWBase):
    """
    Represents a currency with its code and amount in minimum units (e.g., cents for USD)
    """
    code: CurrencyCode
    amount: int = ...
    def get_base_units(self) -> float:
        """Convert the amount from minimum units to base units (e.g., dollars from cents)"""
        ...
    
    def format(self) -> str:
        """Format the currency amount with its symbol"""
        ...
    
    @classmethod
    def from_base_units(cls, code: CurrencyCode, amount: float) -> Currency:
        """
        Create a Currency instance from base units (e.g., dollars instead of cents)

        Args:
            code: The currency code
            amount: The amount in base units (e.g., dollars for USD)

        Returns:
            A new Currency instance with the amount converted to minimum units
        """
        ...
    
    def add(self, other: Currency) -> Currency:
        """Add two currencies of the same type"""
        ...
    
    def multiply(self, factor: float) -> Currency:
        """Multiply currency by a factor"""
        ...
    


